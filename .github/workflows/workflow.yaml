name: RSS READER CI/CD

on: [push]

env:
  MAVEN_CLI_OPTS: "--settings .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  MAVEN_USER:  ${{ secrets.PACKAGE_USER }}
  MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  MAVEN_REPO: ${{ secrets.MAVEN_GITHUB_REPO }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'corretto'
          architecture: 'x64'
          cache: 'maven'
      - name: Build with Maven
        run: mvn $MAVEN_CLI_OPTS $MAVEN_OPTS compile
  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'corretto'
          architecture: 'x64'
          cache: 'maven'
      - name: Validate with Maven
        run: mvn $MAVEN_CLI_OPTS $MAVEN_OPTS clean verify
  docker_build:
    if: github.ref_name == 'main' && github.ref_type == 'branch'
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'corretto'
          architecture: 'x64'
          cache: 'maven'
      - name: Get Version
        run: VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version  -DforceStdout -q)
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_API_KEY }}
      - name: Build and push
        run: docker image build --tag ${IMAGE_NAME}:${VERSION} --build-arg MAVEN_USER=${MAVEN_USER} --build-arg MAVEN_PASSWORD=${MAVEN_PASSWORD} --build-arg MAVEN_CLI_OPTS=${MAVEN_CLI_OPTS} .
      - name: Push Docker
        run: docker push ${IMAGE_NAME}:${VERSION}